pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--title: dungeon
--author: kristen wang
--last updated: 9/12/24

function _init()
	--color setting
	palt(0,false)
	palt(12,true)
	--time
	t=0
	--status vars
	gs=1
	dead=false
	reading=false
	--dsprite vars
	dsprite=2
	dx=25
	dy=25
	dflip_x=false
	dbtn=0
	dhealth=100
	dspeed=1
	dradius={}
	--enemy vars
	enemy={}
end

function _update()
	--update game state
	--game_state()
	
	if gs==1 then
		--timer
		t+=1
		--camera
		camera(flr(dx-64%128),flr(dy-64%128))
		--dsprite movement
		move()
		--check for interaction
		interact()
		--check enemies
	 check_enemy()
	 --update health
		upd_health()
		 
	elseif gs==2 then
		if reading==true then
			tb_update()
		end
	
	elseif gs==3 then
		game_over()
	end
end

function _draw()
	--clear screen
	cls()
	--map
	map()
	--text
	tb_draw()
	--enemies sprites
	for i=1,#enemy do
		spr(enemy[i].sprite_id,
		enemy[i].x,enemy[i].y,
		enemy[i].flip_x)
	end
	--npc sprite <temp>
	npcx=40
	npcy=20
	if t%30>=15 then
		npcy-=1 end
	spr(64,npcx,npcy)
	if t%40>=0 and t%40<10 then bub=6
	elseif t%40>=10 and t%40<20 then bub=22
	elseif t%40>=20 and t%40<30 then bub=38
	elseif t%40>=30 and t%40<40 then bub=54
	end
	spr(bub,npcx+7,npcy-8) 
	--dsprite
	spr(dsprite,dx,dy-1,1,1,dflip_x)
end

--check game state
function game_state()
	if dead==false then
		gs=1
	elseif dead==true then
		gs=2
	end
end

--update dsprite movement
function move()
	--stall animation
	if dbtn==0 or dbtn==1 then
		if t%30>=15 then dsprite=2
		else dsprite=18 end
	elseif dbtn==2 then
		if t%30>=15 then dsprite=33
		else dsprite=49 end
	elseif dbtn==3 then
		if t%30>=15 then dsprite=16
		else dsprite=35 end
	end
	--left arrow
	if btn(0) then
		dbtn=0
		dflip_x=true
		if t%10>=5 then dsprite=34
		else dsprite=2
		end
		dx-=dspeed
		if col(0)==true then dx+=dspeed end
	end
	--right arrow
	if btn(1) then
		dbtn=1
		dflip_x=false
		if t%10>=5 then dsprite=34
		else dsprite=2
		end
		dx+=dspeed
		if col(0)==true then dx-=dspeed end
	end
	--up arrow
	if btn(2) then
		dbtn=2
		if t%10>=5 then dsprite=17
		else dsprite=1
		end
		dy-=dspeed
		if col(0)==true then dy+=dspeed end
	end
	--down arrow
	if btn(3) then
		dbtn=3
		if t%10>=5 then dsprite=48
		else dsprite=32
		end
		dy+=dspeed
		if col(0)==true then dy-=dspeed end
	end
end

--collision check
function col(flg)
	return fget(mget(dx/8,dy/8),
	flg) or fget(mget(dx/8,(dy+8)/8),
	flg) or fget(mget((dx+8)/8,dy/8),
	flg) or fget(mget((dx+8)/8,(dy+8)/8),
	flg)
end

--interaction check
function interact()
	it_interact()
	if btn(❎)==true then
		if dbtn==0 then
			if t%30>=15 then dsprite=3
			else dsprite=19
			end
		elseif dbtn==1 then
			if t%30>=15 then dsprite=3
			else dsprite=19
			end
		elseif dbtn==2 then
			if t%30>=15 then dsprite=51
			else dsprite=20
			end
		elseif dbtn==3 then
			if t%30>=15 then dsprite=52
			else dsprite=36
			end
		end
	end
end

--check if interact with item
function it_interact()
	if col(1)==true
	and btnp(❎) then
		tb_init({"interact"})
	end
end

--check for enemies
function check_enemy()
	for i=1,#enemy do
		if abs(enemy[i].x-dx)<=30 and
		abs(enemy[i].y-dy)<=30 then
			if enemy[i].x>dx then
				enemy[i].x-=enemy[i].speed
				enemy[i].flip_x=true
			elseif enemy[i].x<dx then
				enemy[i].x+=enemy[i].speed
				enemy[i].flip_x=false
			end
			if enemy[i].y>dy then
				enemy[i].y-=enemy[i].speed
			elseif enemy[i].y<dy then
				enemy[i].y+=enemy[i].speed
			end
		end
	end
end

--check if hit
function hit()
	for i=1,#enemy do
		if abs(enemy[i].x-dx)<8 and
		abs(enemy[i].y-dy)<8 then
			return true
		else
			return false
		end
	end
end

--update health
function upd_health()
	if hit()==true then
			dhealth-=1
	end
	if dhealth<=0 then
		dead=true
		gs=3
	end
end

--add enemy sprites
function init_enemy()
	add(enemy,{
	enemy="snake",
	x=100,
	y=63,
	flip_x=false,
	sprite_id=8,
	health=10,
	attack=2,
	speed=0.5})
end

--initialize textbox
function tb_init(string)
	gs=2
	reading=true
	tb={
	str=string,
	i=1,
	cur=0,
	char=0,
	x=dx-64,
	y=dy+32,
	w=127,
	h=21,
	col1=0,
	col2=7,
	col3=7
	}
end

--update textbox
function tb_update()
	if tb.char<#tb.str[tb.i] then
		tb.cur+=0.5
		if tb.cur>0.9 then
			tb.char+=1
			tb.cur=0
		end
		if (btnp(❎)) then tb.char=#tb.str[tb.i] end
	elseif btnp(❎) then
		if #tb.str>tb.i then
			tb.i+=1
			tb.cur=0
			tb.char=0
		else
			reading=false
			gs=1
		end
	end
end

--draw textbox
function tb_draw()
	if reading==true then
		rectfill(tb.x,tb.y,tb.x+tb.w,tb.y+tb.h,tb.col1)
  rect(tb.x,tb.y,tb.x+tb.w,tb.y+tb.h,tb.col2)
  print(sub(tb.str[tb.i],1,tb.char),tb.x+2,tb.y+2,tb.col3)
	end
end

--game over screen
function game_over()
	dsprite=50
	print("game over!",dx-10,dy-10)
end
__gfx__
00000000ccc555ccccc555ccccc555c600000000ccccccccccccccccccccccccccccbbccd0dddd0dd0dddd0ddddddddd10111011000000000000000000000000
000000004c4555cc4c45ffccccc5ffc600000000c7cccccccccccccccccecccccccbb8bcd0dddd0dd0dddd000000000000000000094444900000000000000000
00700700c44555ccc44fffcccccfffc6000000007ccccccccccccccccce78cccccbbbbbbd0dddd0dd0dddddddddddddd11110111492222940000000000000000
000770004466555c4465555ccc555556000000007ccccccccc77777ccce88cccccbbccc7d0dddd0dd0dddddddddddddd00000000299999920000000000000000
00077000cfd665cfcf1155cfcf1155f400000000cccccccccc77777ccc882cccccbbbbbcd0dddd0dd00ddddddddddddd10111101222992220000000000000000
00700700cccd66cfcfc5116fcfc5114f00000000ccccccccc777777cccc2ccccccccbbbbd0dddd0ddd00dddddddddddd00000000244444420000000000000000
00000000ccc5d66cccc5c56cccc5c5cc00000000ccccccccc77cccccccccccccccccccbbd0dddd0d0dd0000000dddd0011101111222222220000000000000000
00000000ccc5ccccccc5c5ccccc5c5cc00000000cccccccc7cccccccccccccccbbbbbbbcd0dddd0d00ddddddd0dddd0d00000000000000000000000000000000
ccc555ccccc555ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccddddddddd0dddd0dd0dddd0d22222222000000000000000000000000
4c4fffcc4c4555ccccc555ccccc555c66cc555ccc7ccccccccccccccccccccccccccbbcc0000000000dddd0d00dddd0000000000002220000000000000000000
c44fffccc44555cc4c45ffccccc5ffc66cc555cc7ccccccccccccccccccaaccccccbb8bcdddddddddddddd0ddddddddd22000000020002000000000000000000
4461555c4466555cc44fff5ccc5fffc66c55555c7ccccccccc77777cccaa99ccccbbbbbbdddddddddddddd0ddddddddd22022000020002000000000000000000
cf6515cfcfd665cf446555cfcf15555665c551cf777ccccccc70777ccc9994cccbbbccc7ddddddddddddd00ddddddddd22022022292229200000000000000000
cfc5116fcfcd66cccf1155cfcfc155f44fc115cfc77cccccc777777cccc94cccccbbbbbbdddddddddddd00dddddddddd22022022229922200000000000000000
ccc5c56cccc5d66cccc5116cccc5114ff415c5ccccccccccc77cccccccccccccbbccccbb0000000000000dd00000000022022022022222000000000000000000
ccc5c5ccccccc5ccccc5c56cccc5c5ccccc5c5cccccccccc7ccccccccccccccccbbbbbbcdddddddddddddd00dddddddd22022022002220000000000000000000
ccc555ccccc555cccccc555ccccccccccccccccccccccccccccccccc00000000cccccbbc0000000000ddddddd0dddd0d00000000000000000000000000000000
4c4fffcc4c4555ccc4c45ffcccc555cc6cc555ccc7cccccccccccccc00000000ccccbb8b000000000dd00000d0dddd0002000000000000000000000000000000
c44fffccc44555cccc44fffc4c4fffcc6ccfffcc7ccccccccccccccc00000000cccbbbbb00000000dd00ddddd0dddddd20000000000000000000000000000000
4461555c4466555cc446555cc44fff5c6c5fff5c7ccccccccc77777c00000000cccbbbc700000000d00dddddd0dddddd22000000000000000000000000000000
cf6515cfcfd665cfcfc155cf446155cf6fc155cf777ccccccc70077c00000000ccbbbccc00000000d0ddddddd0dddddd00000000000000000000000000000000
cfc5116ccfcd66cfcfc5116fcf6515cf6fc515cfc77777ccc777777c00000000ccbbcccc00000000d0ddddddd0dddddd22000000000000000000000000000000
ccc5c56cccc5d66ccc55c55cccc5116c4fc511ccccc777ccc77ccccc00000000cbbbcccc00000000d0dddd00d0dddd0000000000000000000000000000000000
ccccc5ccccc5c5cccccccc5cccc5c56cc4c5c5cccccccccc7ccccccc00000000bbbccccc00000000d0dddd0dd0dddd0d20000000000000000000000000000000
ccc555cccccccccccccccccc6cc555cc6cc555cccccccccccccccccc000000000000000000000000dddddd00d0dddd0d00000000000000000000000000000000
4c4fffccccc555cccccccccc6cc555cc6ccfffccc7cccccccccccccc0000000000000000dd0ddddd00000dd000dddd0d00000000000000000000000000000000
c44fffcc4c4555ccccccccc66cc555cc6ccfffcc7ccccccccccccccc0000000000000000dd0ddddddddd00dddddddd0d02000000000000000000000000000000
4461555cc445555cccccccc66c55515c6c51555c7ccccccccc77777c000000000000000000000000ddddd00ddddddd0d22000000000000000000000000000000
cf6515cf44d655cf5ffccc664fc115cf6fc515cf777ccccccc70007c0000000000000000ddddd0dddddddd0ddddddd0d00000000000000000000000000000000
ccc5116fcfd665cf5ff55565f41555cf4fc511cfc77777ccc777777c0000000000000000ddddd0dddddddd0ddddddd0d22000000000000000000000000000000
ccc5c56ccccd66cc55f5f44cccc5c5ccc4c5c5ccccc77777c77ccccc00000000000000000000000000dddd0d00dddd0d00000000000000000000000000000000
ccc5ccccccc5d66ccc55ff45ccc5c5ccccc5c5cccccc77777ccccccc0000000000000000ddd0ddddd0dddd0dd0dddd0d20000000000000000000000000000000
ccc77ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccd7d7cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc7777cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc7677cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccc77ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc7ccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000101010002000000000000000000000001010100020000000000000000000000000101000000000000000000000000000101010000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
2a1919191919191919193a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
090c0c0d0c0c0c0c0c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
090c0c0c0c0c0c0c0c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
090c0c0c0c0c0c0c0c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
091c0c0c0c0c0c0c0c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a1919191919193a0c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
39393939393939090c0c09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
00010000000000000000000000002c000000000000000000290000600019000000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
